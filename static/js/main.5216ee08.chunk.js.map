{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","components/Error.js","components/InputError.js","App.js","reportWebVitals.js","index.js"],"names":["Form","todoInput","setTodoInput","todos","setTodos","setErr","setInputError","setColor","color","setSearchResult","searchResult","useState","filterInput","setFilterInput","useEffect","myFilter","filter","todo","text","trim","toLowerCase","includes","toLocaleLowerCase","className","onChange","e","target","value","type","placeholder","style","borderColor","onClick","preventDefault","length","key","Math","random","Todo","outPutErr","stateTodo","TodoList","map","Error","err","InputError","inputError","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5216ee08.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Form = ({todoInput, setTodoInput, todos, setTodos, setErr, setInputError, setColor, color, setSearchResult, searchResult }) => {\r\n\r\n    const getInput = (e) => {\r\n        setTodoInput(e.target.value);\r\n    }\r\n\r\n    const submitInput = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        if(todoInput.length === 0){\r\n            setInputError('This Field is Required!');\r\n            setColor('rgb(177, 19, 19)')            \r\n        }else{\r\n            setTodos([\r\n                ...todos, {text: todoInput, key: Math.random() * 1000}\r\n            ]);\r\n    \r\n            setTodoInput('');\r\n            setInputError('');\r\n            setColor(null);\r\n\r\n        }\r\n\r\n        if(todos.length === 0){\r\n            setErr('');\r\n            setFilterInput('');\r\n        }\r\n\r\n    }\r\n    \r\n    const [filterInput, setFilterInput] = useState('');\r\n    \r\n    const getFilterInput = (e) => {\r\n        setFilterInput(e.target.value)\r\n    }\r\n\r\n    // filter\r\n    useEffect(() => {\r\n        const myFilter = todos.filter((todo) => todo.text.trim().toLowerCase().includes(filterInput.trim().toLocaleLowerCase()))\r\n        // const myFilter2 = todos.filter((todo) => !todo.text.trim().toLowerCase().includes(filterInput.trim().toLocaleLowerCase()))\r\n        \r\n        setTodos(myFilter)\r\n        // setTodos(myFilter2);\r\n        ;\r\n    }, [filterInput]);\r\n\r\n    return ( \r\n        <div className=\"form-container\" >\r\n            <form>\r\n                <div className=\"flex-items\">\r\n                    <input  \r\n                    onChange={ getInput } \r\n                    value={ todoInput }\r\n                    type=\"text\" \r\n                    placeholder=\"Input Todo\" \r\n                    style={ { borderColor: color } } />\r\n                    <button onClick={ submitInput }>+</button>\r\n                </div>\r\n                {todos.length > 0 && <input onChange={ getFilterInput }  value={ filterInput } type=\"text\" placeholder=\"Search...\" className=\"second-input\"/>}\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ( {todos, todo, setTodos, setErr} ) => {\r\n    \r\n    const handleDelete = () => {\r\n        setTodos(todos.filter((stateTodo) => stateTodo.key !== todo.key));\r\n        outPutErr(todos)     \r\n    };\r\n\r\n    const outPutErr = (todos) => {\r\n        if(todos.length === 1){\r\n            setErr('No More Todos...');\r\n        }\r\n    }\r\n    \r\n    return ( \r\n        <div className=\"Todo\">\r\n            <p>{todo.text}</p>\r\n            <button onClick = { handleDelete }>DEL</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({ todos, setTodos, setErr, setSearchResult, searchResult }) => {\r\n    return ( \r\n        <div className=\"TodoList\">\r\n            { todos.map((todo) => <Todo todo={ todo } todos={ todos } key={todo.key} setTodos={ setTodos } setErr={ setErr } setSearchResult={ setSearchResult } searchResult={ searchResult }/>) }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default TodoList;","import React from 'react';\r\n\r\nconst Error = ({err}) => {\r\n    \r\n    return ( \r\n        <div className=\"error\">\r\n            <h1>{ err }</h1>\r\n        </div>\r\n     );\r\n    \r\n}\r\n \r\nexport default Error;","const InputError = ({ inputError}) => {\r\n    return ( \r\n        <div className=\"inputError\">\r\n            <p>{ inputError }</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default InputError;","import React from 'react';\nimport {useState} from 'react';\nimport './styles/app.scss';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\nimport Error from './components/Error';\nimport InputError from './components/InputError';\n\nfunction App() {\n  const [todoInput, setTodoInput] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [ err, setErr ] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [color, setColor] = useState(null);\n  const [searchResult, setSearchResult] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <h1>Todo App.</h1>\n      <InputError inputError={ inputError }/>\n      <Form todoInput={ todoInput }\n       setTodoInput={ setTodoInput }\n       todos={todos}\n       setTodos={setTodos}\n       setErr={ setErr } \n       setInputError={ setInputError }\n       setColor={ setColor }\n       color={ color }\n       searchResult={ searchResult }\n       setSearchResult ={ setSearchResult } \n       />\n      <TodoList todos={ todos } setTodos={setTodos} setErr={ setErr }/>\n      <Error err={ err }/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}